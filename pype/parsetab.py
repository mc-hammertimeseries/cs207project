
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EFB8CF1353CF3C09DEAB2CE24795587E'
    
_lr_action_items = {'$end':([1,2,4,6,7,8,18,19,],[-5,-1,0,-4,-2,-3,-6,-7,]),'ID':([5,9,10,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,58,],[10,11,13,13,-26,-27,-9,-28,21,-8,13,13,33,13,13,38,38,13,-21,-30,13,13,13,13,13,-15,38,-17,52,-13,38,-11,13,-20,-29,-23,-22,-24,-14,-12,-18,57,-10,-25,-19,-16,]),'ASSIGN':([17,],[23,]),'OP_SUB':([17,],[22,]),'LPAREN':([0,1,2,6,7,8,10,12,13,14,15,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,48,49,50,51,54,55,56,58,],[3,-5,3,-4,-2,-3,17,17,-26,-27,-9,-28,-6,-7,-8,17,17,17,17,39,39,17,-21,-30,17,17,17,17,17,-15,39,-17,-13,39,-11,17,-20,-29,-23,-22,-24,-14,-12,-10,-25,-19,-16,]),'IMPORT':([3,],[9,]),'OP_ADD':([17,],[24,]),'RBRACE':([12,13,14,15,16,20,29,40,42,44,46,48,49,51,54,55,56,],[19,-26,-27,-9,-28,-8,-21,-13,-11,-20,-23,-22,-24,-12,-10,-25,-19,]),'OP_MUL':([17,],[25,]),'NUMBER':([10,12,13,14,15,16,20,21,22,24,25,28,29,30,31,32,33,34,35,40,42,43,44,45,46,48,49,51,54,55,56,],[14,14,-26,-27,-9,-28,-8,14,14,14,14,14,-21,-30,14,14,14,14,14,-13,-11,14,-20,-29,-23,-22,-24,-12,-10,-25,-19,]),'OUTPUT':([17,],[26,]),'INPUT':([17,],[27,]),'STRING':([10,12,13,14,15,16,20,21,22,24,25,28,29,30,31,32,33,34,35,40,42,43,44,45,46,48,49,51,54,55,56,],[16,16,-26,-27,-9,-28,-8,16,16,16,16,16,-21,-30,16,16,16,16,16,-13,-11,16,-20,-29,-23,-22,-24,-12,-10,-25,-19,]),'LBRACE':([0,1,2,6,7,8,18,19,],[5,-5,5,-4,-2,-3,-6,-7,]),'RPAREN':([11,13,14,16,21,26,27,29,30,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[18,-26,-27,-28,29,40,42,-21,-30,44,46,48,49,-15,51,-17,-13,54,-11,55,-20,-29,-23,56,-22,-24,-14,-12,-10,-25,-19,58,-16,]),'OP_DIV':([17,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([26,27,37,41,],[36,36,50,50,]),'expression_list':([10,],[12,]),'parameter_list':([21,22,24,25,28,],[31,32,34,35,43,]),'component':([0,2,],[1,7,]),'declaration_list':([26,27,],[37,41,]),'statement_list':([0,],[2,]),'program':([0,],[4,]),'type':([39,],[53,]),'expression':([10,12,21,22,24,25,28,31,32,33,34,35,43,],[15,20,30,30,30,30,30,45,45,47,45,45,45,]),'import_statement':([0,2,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',10),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',17),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',18),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',19),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',20),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',29),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',34),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',39),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',40),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',49),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',50),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',58),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',59),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',67),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',68),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',77),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',78),
  ('type -> ID','type',1,'p_type','parser.py',86),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',91),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',96),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',97),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',105),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',110),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',115),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',120),
  ('expression -> ID','expression',1,'p_id','parser.py',125),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',130),
  ('expression -> STRING','expression',1,'p_string','parser.py',135),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',140),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',141),
]
