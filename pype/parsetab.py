
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1DBBFB448E18C26B4F53B6842563E856'
    
_lr_action_items = {'NUMBER':([7,11,12,13,14,16,19,20,21,22,24,26,29,30,31,32,33,34,35,40,41,42,44,45,46,47,49,50,54,55,56,],[11,-27,11,-9,-28,-26,-8,11,11,11,11,11,-30,11,11,11,11,11,-11,-21,11,-13,-24,-29,-22,-25,-23,-10,-20,-12,-19,]),'OP_MUL':([15,],[20,]),'$end':([1,3,5,6,9,10,18,28,],[0,-5,-1,-4,-2,-3,-7,-6,]),'RBRACE':([11,12,13,14,16,19,35,40,42,44,46,47,49,50,54,55,56,],[-27,18,-9,-28,-26,-8,-11,-21,-13,-24,-22,-25,-23,-10,-20,-12,-19,]),'LBRACE':([0,3,5,6,9,10,18,28,],[2,-5,2,-4,-2,-3,-7,-6,]),'RPAREN':([11,14,16,17,25,26,27,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[-27,-28,-26,28,35,40,42,-30,44,46,47,49,-11,50,-15,-17,-21,54,-13,55,-24,-29,-22,-25,56,-23,-10,-14,-20,-12,-19,58,-16,]),'OP_ADD':([15,],[21,]),'STRING':([7,11,12,13,14,16,19,20,21,22,24,26,29,30,31,32,33,34,35,40,41,42,44,45,46,47,49,50,54,55,56,],[14,-27,14,-9,-28,-26,-8,14,14,14,14,14,-30,14,14,14,14,14,-11,-21,14,-13,-24,-29,-22,-25,-23,-10,-20,-12,-19,]),'OP_DIV':([15,],[22,]),'ASSIGN':([15,],[23,]),'OP_SUB':([15,],[24,]),'IMPORT':([4,],[8,]),'LPAREN':([0,3,5,6,7,9,10,11,12,13,14,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,50,51,54,55,56,58,],[4,-5,4,-4,15,-2,-3,-27,15,-9,-28,-26,-7,-8,15,15,15,15,38,15,38,-6,-30,15,15,15,15,15,-11,38,-15,-17,-21,15,-13,38,-24,-29,-22,-25,-23,-10,-14,-20,-12,-19,-16,]),'INPUT':([15,],[25,]),'ID':([2,7,8,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,58,],[7,16,17,-27,16,-9,-28,26,-26,-8,16,16,16,33,16,39,16,39,-30,16,16,16,16,16,-11,39,-15,52,-17,-21,16,-13,39,-24,-29,-22,-25,-23,-10,-14,-18,57,-20,-12,-19,-16,]),'OUTPUT':([15,],[27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([20,21,22,24,26,],[30,31,32,34,41,]),'declaration_list':([25,27,],[36,43,]),'declaration':([25,27,36,43,],[37,37,51,51,]),'program':([0,],[1,]),'expression_list':([7,],[12,]),'type':([38,],[53,]),'component':([0,5,],[3,9,]),'expression':([7,12,20,21,22,24,26,30,31,32,33,34,41,],[13,19,29,29,29,29,29,45,45,45,48,45,45,]),'statement_list':([0,],[5,]),'import_statement':([0,5,],[6,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',10),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',17),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',18),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',19),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',20),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',29),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',34),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',39),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',40),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',49),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',50),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',58),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',59),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',67),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',68),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',77),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',78),
  ('type -> ID','type',1,'p_type','parser.py',86),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',91),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',96),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',97),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',105),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',110),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',115),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',120),
  ('expression -> ID','expression',1,'p_id','parser.py',125),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',130),
  ('expression -> STRING','expression',1,'p_string','parser.py',135),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',140),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',141),
]
