
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9A00E87FD640930D518D16A91B7B52A0'
    
_lr_action_items = {'OUTPUT':([16,],[26,]),'NUMBER':([8,12,13,14,15,17,19,21,22,23,24,28,29,30,31,32,33,34,35,38,41,43,44,45,46,47,48,53,54,55,56,],[12,-27,-28,12,-9,-26,-8,12,12,12,12,12,12,-30,12,12,12,-21,12,-13,-11,12,-23,-29,-22,-25,-20,-12,-10,-24,-19,]),'STRING':([8,12,13,14,15,17,19,21,22,23,24,28,29,30,31,32,33,34,35,38,41,43,44,45,46,47,48,53,54,55,56,],[13,-27,-28,13,-9,-26,-8,13,13,13,13,13,13,-30,13,13,13,-21,13,-13,-11,13,-23,-29,-22,-25,-20,-12,-10,-24,-19,]),'OP_SUB':([16,],[21,]),'OP_ADD':([16,],[22,]),'IMPORT':([1,],[7,]),'OP_DIV':([16,],[23,]),'LBRACE':([0,3,5,6,9,10,18,20,],[2,2,-4,-5,-3,-2,-6,-7,]),'LPAREN':([0,3,5,6,8,9,10,12,13,14,15,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,52,53,54,55,56,58,],[1,1,-4,-5,16,-3,-2,-27,-28,16,-9,-26,-6,-8,-7,16,16,16,16,36,36,16,16,-30,16,16,16,-21,16,-15,-13,36,-17,-11,36,16,-23,-29,-22,-25,-20,-14,-12,-10,-24,-19,-16,]),'$end':([3,4,5,6,9,10,18,20,],[-1,0,-4,-5,-3,-2,-6,-7,]),'RPAREN':([11,12,13,17,24,26,27,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,],[18,-27,-28,-26,34,38,41,44,-30,46,47,48,-21,-15,-13,53,-17,-11,54,55,-23,-29,-22,-25,-20,56,-14,-12,-10,-24,-19,58,-16,]),'ASSIGN':([16,],[25,]),'ID':([2,7,8,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,58,],[8,11,17,-27,-28,17,-9,24,-26,-8,17,17,17,17,35,40,40,17,17,-30,17,17,17,-21,17,51,-15,-13,40,-17,-11,40,17,-23,-29,-22,-25,-20,57,-18,-14,-12,-10,-24,-19,-16,]),'OP_MUL':([16,],[28,]),'INPUT':([16,],[27,]),'RBRACE':([12,13,14,15,17,19,34,38,41,44,46,47,48,53,54,55,56,],[-27,-28,20,-9,-26,-8,-21,-13,-11,-23,-22,-25,-20,-12,-10,-24,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([26,27,39,42,],[37,37,52,52,]),'declaration_list':([26,27,],[39,42,]),'parameter_list':([21,22,23,24,28,],[29,31,32,33,43,]),'statement_list':([0,],[3,]),'expression_list':([8,],[14,]),'program':([0,],[4,]),'import_statement':([0,3,],[5,9,]),'type':([36,],[50,]),'component':([0,3,],[6,10,]),'expression':([8,14,21,22,23,24,28,29,31,32,33,35,43,],[15,19,30,30,30,30,30,45,45,45,45,49,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',24),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',28),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',32),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',33),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',41),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',42),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',49),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',50),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',57),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',58),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',66),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',67),
  ('type -> ID','type',1,'p_type','parser.py',74),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',78),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',82),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',83),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add_expression','parser.py',90),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub_expression','parser.py',94),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div_expression','parser.py',102),
  ('expression -> ID','expression',1,'p_id','parser.py',106),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',110),
  ('expression -> STRING','expression',1,'p_string','parser.py',114),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',118),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',119),
]
