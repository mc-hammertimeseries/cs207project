
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A4271323C5F0D308FC393DC2BBD9B0AA'
    
_lr_action_items = {'INPUT':([12,],[25,]),'NUMBER':([9,11,13,14,15,16,19,20,22,23,24,26,29,30,31,32,33,34,35,39,41,43,44,45,47,48,49,51,54,55,56,],[13,13,-27,-26,-9,-28,-8,13,13,13,13,13,13,-30,13,13,13,-21,13,-11,13,-13,-29,-22,-23,-20,-25,-10,-24,-12,-19,]),'ASSIGN':([12,],[21,]),'OP_SUB':([12,],[22,]),'RPAREN':([13,14,16,17,23,25,27,29,30,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[-27,-26,-28,28,34,39,43,45,-30,47,48,-21,49,-15,-17,51,-11,54,55,-13,-29,-22,56,-23,-20,-25,-14,-10,-24,-12,-19,58,-16,]),'STRING':([9,11,13,14,15,16,19,20,22,23,24,26,29,30,31,32,33,34,35,39,41,43,44,45,47,48,49,51,54,55,56,],[16,16,-27,-26,-9,-28,-8,16,16,16,16,16,16,-30,16,16,16,-21,16,-11,16,-13,-29,-22,-23,-20,-25,-10,-24,-12,-19,]),'RBRACE':([11,13,14,15,16,19,34,39,43,45,47,48,49,51,54,55,56,],[18,-27,-26,-9,-28,-8,-21,-11,-13,-22,-23,-20,-25,-10,-24,-12,-19,]),'IMPORT':([4,],[10,]),'ID':([2,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,],[9,14,17,14,23,-27,-26,-9,-28,-8,14,31,14,14,14,37,14,37,14,-30,14,14,14,-21,14,-15,-17,37,-11,53,14,37,-13,-29,-22,-23,-20,-25,-14,-10,57,-18,-24,-12,-19,-16,]),'$end':([1,3,5,6,7,8,18,28,],[-1,-5,0,-4,-2,-3,-7,-6,]),'OP_DIV':([12,],[24,]),'OP_ADD':([12,],[20,]),'LPAREN':([0,1,3,6,7,8,9,11,13,14,15,16,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,47,48,49,50,51,54,55,56,58,],[4,4,-5,-4,-2,-3,12,12,-27,-26,-9,-28,-7,-8,12,12,12,12,40,12,40,-6,12,-30,12,12,12,-21,12,-15,-17,40,-11,12,40,-13,-29,-22,-23,-20,-25,-14,-10,-24,-12,-19,-16,]),'LBRACE':([0,1,3,6,7,8,18,28,],[2,2,-5,-4,-2,-3,-7,-6,]),'OP_MUL':([12,],[26,]),'OUTPUT':([12,],[27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([40,],[52,]),'declaration_list':([25,27,],[38,42,]),'declaration':([25,27,38,42,],[36,36,50,50,]),'statement_list':([0,],[1,]),'parameter_list':([20,22,23,24,26,],[29,32,33,35,41,]),'expression':([9,11,20,22,23,24,26,29,31,32,33,35,41,],[15,19,30,30,30,30,30,44,46,44,44,44,44,]),'component':([0,1,],[3,7,]),'expression_list':([9,],[11,]),'program':([0,],[5,]),'import_statement':([0,1,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',24),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',28),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',32),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',33),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',41),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',42),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',49),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',50),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',57),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',58),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',66),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',67),
  ('type -> ID','type',1,'p_type','parser.py',74),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',78),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',82),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',83),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add_expression','parser.py',90),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub_expression','parser.py',94),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div_expression','parser.py',102),
  ('expression -> ID','expression',1,'p_id','parser.py',106),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',110),
  ('expression -> STRING','expression',1,'p_string','parser.py',114),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',118),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',119),
]
