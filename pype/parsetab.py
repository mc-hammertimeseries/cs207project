
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EFB8CF1353CF3C09DEAB2CE24795587E'
    
_lr_action_items = {'$end':([2,3,4,6,8,9,19,28,],[0,-5,-1,-4,-2,-3,-7,-6,]),'LBRACE':([0,3,4,6,8,9,19,28,],[1,-5,1,-4,-2,-3,-7,-6,]),'STRING':([7,11,12,13,14,15,18,20,23,25,26,27,29,30,31,34,37,38,40,41,42,43,44,45,47,51,52,53,54,55,57,],[15,-26,-9,-27,15,-28,-8,15,15,15,15,15,-30,15,-21,-11,15,15,-13,15,15,15,-29,-20,-10,-24,-12,-23,-25,-22,-19,]),'IMPORT':([5,],[10,]),'OUTPUT':([16,],[24,]),'ASSIGN':([16,],[22,]),'ID':([1,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[7,11,17,-26,-9,-27,11,-28,20,-8,11,35,37,11,35,11,11,11,-30,11,-21,35,-15,-11,-17,49,11,11,35,-13,11,11,11,-29,-20,-14,-10,56,-18,-24,-12,-23,-25,-22,-19,-16,]),'NUMBER':([7,11,12,13,14,15,18,20,23,25,26,27,29,30,31,34,37,38,40,41,42,43,44,45,47,51,52,53,54,55,57,],[13,-26,-9,-27,13,-28,-8,13,13,13,13,13,-30,13,-21,-11,13,13,-13,13,13,13,-29,-20,-10,-24,-12,-23,-25,-22,-19,]),'INPUT':([16,],[21,]),'RBRACE':([11,12,13,14,15,18,31,34,40,45,47,51,52,53,54,55,57,],[-26,-9,-27,19,-28,-8,-21,-11,-13,-20,-10,-24,-12,-23,-25,-22,-19,]),'OP_SUB':([16,],[25,]),'RPAREN':([11,13,15,17,20,21,24,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[-26,-27,-28,28,31,34,40,-30,45,-21,47,-15,-11,-17,51,52,-13,53,54,55,-29,-20,-14,-10,57,-24,-12,-23,-25,-22,58,-19,-16,]),'OP_DIV':([16,],[26,]),'LPAREN':([0,3,4,6,7,8,9,11,12,13,14,15,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,55,57,58,],[5,-5,5,-4,16,-2,-3,-26,-9,-27,16,-28,-8,-7,16,36,16,36,16,16,16,-6,-30,16,-21,36,-15,-11,-17,16,16,36,-13,16,16,16,-29,-20,-14,-10,-24,-12,-23,-25,-22,-19,-16,]),'OP_ADD':([16,],[27,]),'OP_MUL':([16,],[23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([21,24,],[32,39,]),'declaration':([21,24,32,39,],[33,33,46,46,]),'program':([0,],[2,]),'component':([0,4,],[3,8,]),'statement_list':([0,],[4,]),'expression_list':([7,],[14,]),'type':([36,],[48,]),'import_statement':([0,4,],[6,9,]),'expression':([7,14,20,23,25,26,27,30,37,38,41,42,43,],[12,18,29,29,29,29,29,44,50,44,44,44,44,]),'parameter_list':([20,23,25,26,27,],[30,38,41,42,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',25),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',35),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',36),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',45),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',46),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',54),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',55),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',63),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',64),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',92),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',93),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',101),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',106),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',111),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',116),
  ('expression -> ID','expression',1,'p_id','parser.py',121),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',126),
  ('expression -> STRING','expression',1,'p_string','parser.py',131),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',136),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',137),
]
