
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EFB8CF1353CF3C09DEAB2CE24795587E'
    
_lr_action_items = {'OP_SUB':([12,],[19,]),'LPAREN':([0,1,3,4,7,8,10,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,55,57,58,],[5,-4,-5,5,-3,-2,12,-9,-28,-26,-27,12,-6,12,12,12,12,35,35,12,-8,-7,12,-30,12,12,12,-21,-15,35,-13,-17,35,-11,12,12,-23,-29,-24,-25,-20,-14,-12,-10,-22,-19,-16,]),'ID':([6,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[10,11,15,22,-9,-28,-26,-27,15,15,15,15,15,39,39,42,15,-8,15,-30,15,15,15,-21,50,-15,39,-13,-17,39,-11,15,15,-23,-29,-24,-25,-20,56,-18,-14,-12,-10,-22,-19,-16,]),'IMPORT':([5,],[9,]),'RPAREN':([11,14,15,16,22,23,24,29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,47,48,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,34,38,41,44,-30,46,47,48,-21,-15,52,-13,-17,53,-11,55,-23,-29,-24,-25,-20,-14,-12,-10,57,-22,58,-19,-16,]),'OP_MUL':([12,],[20,]),'OP_DIV':([12,],[21,]),'OP_ADD':([12,],[26,]),'INPUT':([12,],[24,]),'OUTPUT':([12,],[23,]),'STRING':([10,13,14,15,16,17,19,20,21,22,26,27,29,30,31,32,33,34,38,41,42,43,44,45,46,47,48,52,53,55,57,],[14,-9,-28,-26,-27,14,14,14,14,14,14,-8,14,-30,14,14,14,-21,-13,-11,14,14,-23,-29,-24,-25,-20,-12,-10,-22,-19,]),'NUMBER':([10,13,14,15,16,17,19,20,21,22,26,27,29,30,31,32,33,34,38,41,42,43,44,45,46,47,48,52,53,55,57,],[16,-9,-28,-26,-27,16,16,16,16,16,16,-8,16,-30,16,16,16,-21,-13,-11,16,16,-23,-29,-24,-25,-20,-12,-10,-22,-19,]),'RBRACE':([13,14,15,16,17,27,34,38,41,44,46,47,48,52,53,55,57,],[-9,-28,-26,-27,28,-8,-21,-13,-11,-23,-24,-25,-20,-12,-10,-22,-19,]),'ASSIGN':([12,],[25,]),'LBRACE':([0,1,3,4,7,8,18,28,],[6,-4,-5,6,-3,-2,-6,-7,]),'$end':([1,2,3,4,7,8,18,28,],[-4,0,-5,-1,-3,-2,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'import_statement':([0,4,],[1,7,]),'program':([0,],[2,]),'component':([0,4,],[3,8,]),'statement_list':([0,],[4,]),'declaration_list':([23,24,],[37,40,]),'parameter_list':([19,20,21,22,26,],[29,31,32,33,43,]),'declaration':([23,24,37,40,],[36,36,51,51,]),'type':([35,],[49,]),'expression':([10,17,19,20,21,22,26,29,31,32,33,42,43,],[13,27,30,30,30,30,30,45,45,45,45,54,45,]),'expression_list':([10,],[17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',10),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',17),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',18),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',19),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',20),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',29),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',34),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',39),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',40),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',49),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',50),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',58),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',59),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',67),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',68),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',77),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',78),
  ('type -> ID','type',1,'p_type','parser.py',86),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',91),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',96),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',97),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',105),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',110),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',115),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',120),
  ('expression -> ID','expression',1,'p_id','parser.py',125),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',130),
  ('expression -> STRING','expression',1,'p_string','parser.py',135),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',140),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',141),
]
