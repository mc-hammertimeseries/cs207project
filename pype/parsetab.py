
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9A00E87FD640930D518D16A91B7B52A0'
    
_lr_action_items = {'OP_DIV':([16,],[19,]),'INPUT':([16,],[20,]),'RBRACE':([12,13,14,15,17,28,35,39,43,44,47,50,51,52,54,55,57,],[-26,-28,-27,-9,27,-8,-11,-21,-13,-25,-10,-22,-24,-20,-23,-12,-19,]),'OP_ADD':([16,],[21,]),'OP_MUL':([16,],[22,]),'IMPORT':([4,],[9,]),'ID':([5,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,],[10,11,12,-26,-28,-27,-9,23,12,12,31,12,12,12,40,12,31,-8,-30,12,-17,31,48,-15,-11,12,12,12,-21,12,12,31,-13,-25,-29,-14,-10,-18,56,-22,-24,-20,-23,-12,-19,-16,]),'STRING':([10,12,13,14,15,17,19,21,22,23,25,28,29,30,35,36,37,38,39,40,41,43,44,45,47,50,51,52,54,55,57,],[13,-26,-28,-27,-9,13,13,13,13,13,13,-8,-30,13,-11,13,13,13,-21,13,13,-13,-25,-29,-10,-22,-24,-20,-23,-12,-19,]),'NUMBER':([10,12,13,14,15,17,19,21,22,23,25,28,29,30,35,36,37,38,39,40,41,43,44,45,47,50,51,52,54,55,57,],[14,-26,-28,-27,-9,14,14,14,14,14,14,-8,-30,14,-11,14,14,14,-21,14,14,-13,-25,-29,-10,-22,-24,-20,-23,-12,-19,]),'ASSIGN':([16,],[24,]),'LPAREN':([0,1,2,3,7,8,10,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,54,55,57,58,],[4,-5,-4,4,-2,-3,16,-26,-28,-27,-9,16,-6,16,33,16,16,16,16,33,-7,-8,-30,16,-17,33,-15,-11,16,16,16,-21,16,16,33,-13,-25,-29,-14,-10,-22,-24,-20,-23,-12,-19,-16,]),'$end':([1,2,3,6,7,8,18,27,],[-5,-4,-1,0,-2,-3,-6,-7,]),'OP_SUB':([16,],[25,]),'RPAREN':([11,12,13,14,20,23,26,29,30,31,32,34,35,36,37,38,39,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,35,39,43,-30,44,-17,47,-15,-11,50,51,52,-21,54,55,-13,-25,-29,-14,-10,-22,-24,-20,57,-23,-12,58,-19,-16,]),'OUTPUT':([16,],[26,]),'LBRACE':([0,1,2,3,7,8,18,27,],[5,-5,-4,5,-2,-3,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([33,],[49,]),'component':([0,3,],[1,7,]),'import_statement':([0,3,],[2,8,]),'declaration_list':([20,26,],[32,42,]),'statement_list':([0,],[3,]),'program':([0,],[6,]),'declaration':([20,26,32,42,],[34,34,46,46,]),'expression_list':([10,],[17,]),'parameter_list':([19,21,22,23,25,],[30,36,37,38,41,]),'expression':([10,17,19,21,22,23,25,30,36,37,38,40,41,],[15,28,29,29,29,29,29,45,45,45,45,53,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',24),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',28),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',32),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',33),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',41),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',42),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',49),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',50),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',57),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',58),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',66),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',67),
  ('type -> ID','type',1,'p_type','parser.py',74),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',78),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',82),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',83),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',90),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',94),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',102),
  ('expression -> ID','expression',1,'p_id','parser.py',106),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',110),
  ('expression -> STRING','expression',1,'p_string','parser.py',114),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',118),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',119),
]
