
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EFB8CF1353CF3C09DEAB2CE24795587E'
    
_lr_action_items = {'ID':([5,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[9,12,17,12,-26,23,-28,-27,-9,-8,29,12,36,12,12,12,12,29,-17,45,29,-15,-11,-30,12,12,-21,12,12,12,12,-13,29,56,-18,-14,-10,-29,-23,-20,-24,-25,-22,-12,-19,-16,]),'IMPORT':([6,],[10,]),'OP_SUB':([13,],[21,]),'OP_DIV':([13,],[25,]),'INPUT':([13,],[20,]),'LBRACE':([0,1,2,4,7,8,18,28,],[5,-4,5,-5,-3,-2,-7,-6,]),'OP_MUL':([13,],[24,]),'$end':([1,2,3,4,7,8,18,28,],[-4,-1,0,-5,-3,-2,-7,-6,]),'RBRACE':([11,12,14,15,16,19,33,37,42,47,49,51,52,53,54,55,57,],[18,-26,-28,-27,-9,-8,-11,-21,-13,-10,-23,-20,-24,-25,-22,-12,-19,]),'LPAREN':([0,1,2,4,7,8,9,11,12,14,15,16,18,19,20,21,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,51,52,53,54,55,57,58,],[6,-4,6,-5,-3,-2,13,13,-26,-28,-27,-9,-7,-8,30,13,13,13,13,13,30,-6,-17,30,-15,-11,-30,13,13,-21,13,13,13,13,-13,30,-14,-10,-29,-23,-20,-24,-25,-22,-12,-19,-16,]),'ASSIGN':([13,],[22,]),'NUMBER':([9,11,12,14,15,16,19,21,23,24,25,26,33,34,35,36,37,38,39,40,41,42,47,48,49,51,52,53,54,55,57,],[15,15,-26,-28,-27,-9,-8,15,15,15,15,15,-11,-30,15,15,-21,15,15,15,15,-13,-10,-29,-23,-20,-24,-25,-22,-12,-19,]),'OUTPUT':([13,],[27,]),'STRING':([9,11,12,14,15,16,19,21,23,24,25,26,33,34,35,36,37,38,39,40,41,42,47,48,49,51,52,53,54,55,57,],[14,14,-26,-28,-27,-9,-8,14,14,14,14,14,-11,-30,14,14,-21,14,14,14,14,-13,-10,-29,-23,-20,-24,-25,-22,-12,-19,]),'OP_ADD':([13,],[26,]),'RPAREN':([12,14,15,17,20,23,27,29,31,32,33,34,35,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-26,-28,-27,28,33,37,42,-17,47,-15,-11,-30,49,-21,51,52,53,54,-13,55,-14,-10,-29,-23,57,-20,-24,-25,-22,-12,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([9,],[11,]),'import_statement':([0,2,],[1,7,]),'statement_list':([0,],[2,]),'type':([30,],[44,]),'program':([0,],[3,]),'declaration_list':([20,27,],[31,43,]),'component':([0,2,],[4,8,]),'parameter_list':([21,23,24,25,26,],[35,38,39,40,41,]),'expression':([9,11,21,23,24,25,26,35,36,38,39,40,41,],[16,19,34,34,34,34,34,48,50,48,48,48,48,]),'declaration':([20,27,31,43,],[32,32,46,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',25),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',35),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',36),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',45),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',46),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',54),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',55),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',63),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',64),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',92),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',93),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',101),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',106),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',111),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',116),
  ('expression -> ID','expression',1,'p_id','parser.py',121),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',126),
  ('expression -> STRING','expression',1,'p_string','parser.py',131),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',136),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',137),
]
