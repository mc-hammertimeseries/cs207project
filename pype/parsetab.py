
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EFB8CF1353CF3C09DEAB2CE24795587E'
    
_lr_action_items = {'RBRACE':([13,14,15,16,17,28,33,35,40,45,46,47,50,52,53,54,57,],[-9,-27,-26,27,-28,-8,-21,-13,-11,-22,-23,-20,-12,-24,-10,-25,-19,]),'LBRACE':([0,3,4,6,8,9,18,27,],[5,5,-4,-5,-3,-2,-6,-7,]),'NUMBER':([10,13,14,15,16,17,19,20,21,23,25,28,29,30,31,32,33,35,39,40,42,43,44,45,46,47,50,52,53,54,57,],[14,-9,-27,-26,14,-28,14,14,14,14,14,-8,-30,14,14,14,-21,-13,14,-11,14,14,-29,-22,-23,-20,-12,-24,-10,-25,-19,]),'LPAREN':([0,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,57,58,],[2,2,-4,-5,-3,-2,12,-9,-27,-26,12,-28,-6,12,12,12,34,12,34,12,-7,-8,-30,12,12,12,-21,-13,-15,34,-17,12,-11,34,12,12,-29,-22,-23,-20,-12,-14,-24,-10,-25,-19,-16,]),'IMPORT':([2,],[7,]),'OP_SUB':([12,],[20,]),'OP_ADD':([12,],[19,]),'$end':([1,3,4,6,8,9,18,27,],[0,-1,-4,-5,-3,-2,-6,-7,]),'ID':([5,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[10,11,15,21,-9,-27,-26,15,-28,15,15,15,38,15,38,15,43,-8,-30,15,15,15,-21,49,-13,-15,38,-17,15,-11,38,15,15,-29,-22,-23,-20,56,-18,-12,-14,-24,-10,-25,-19,-16,]),'OUTPUT':([12,],[22,]),'OP_MUL':([12,],[23,]),'INPUT':([12,],[24,]),'STRING':([10,13,14,15,16,17,19,20,21,23,25,28,29,30,31,32,33,35,39,40,42,43,44,45,46,47,50,52,53,54,57,],[17,-9,-27,-26,17,-28,17,17,17,17,17,-8,-30,17,17,17,-21,-13,17,-11,17,17,-29,-22,-23,-20,-12,-24,-10,-25,-19,]),'RPAREN':([11,14,15,17,21,22,24,29,30,31,32,33,35,36,37,38,39,40,41,42,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-27,-26,-28,33,35,40,-30,45,46,47,-21,-13,-15,50,-17,52,-11,53,54,-29,-22,-23,-20,-12,-14,-24,-10,-25,57,58,-19,-16,]),'OP_DIV':([12,],[25,]),'ASSIGN':([12,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration':([22,24,37,41,],[36,36,51,51,]),'type':([34,],[48,]),'expression_list':([10,],[16,]),'statement_list':([0,],[3,]),'import_statement':([0,3,],[4,8,]),'component':([0,3,],[6,9,]),'expression':([10,16,19,20,21,23,25,30,31,32,39,42,43,],[13,28,29,29,29,29,29,44,44,44,44,44,55,]),'parameter_list':([19,20,21,23,25,],[30,31,32,39,42,]),'declaration_list':([22,24,],[37,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',25),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',35),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',36),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',45),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',46),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',54),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',55),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',63),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',64),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',92),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',93),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',101),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',106),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',111),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',116),
  ('expression -> ID','expression',1,'p_id','parser.py',121),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',126),
  ('expression -> STRING','expression',1,'p_string','parser.py',131),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',136),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',137),
]
