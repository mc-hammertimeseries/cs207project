
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '8B184828847846774CD153CEF0204C26'
    
_lr_action_items = {'RPAREN':([11,14,16,17,21,22,27,29,30,31,32,33,34,36,37,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[-28,-27,-26,28,31,36,42,-30,44,-11,46,-15,-17,-13,50,52,53,54,-21,55,-25,-29,-10,-14,-12,57,-22,-23,-24,-20,58,-19,-16,]),'INPUT':([15,],[21,]),'OP_MUL':([15,],[26,]),'IMPORT':([6,],[10,]),'ID':([3,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[7,16,17,-28,-9,16,-27,27,-26,-8,16,34,34,38,16,16,16,16,-30,16,-11,34,-15,-17,48,-13,34,16,16,16,16,-21,16,-25,-29,-10,-14,-18,56,-12,-22,-23,-24,-20,-19,-16,]),'OP_DIV':([15,],[20,]),'OUTPUT':([15,],[22,]),'STRING':([7,11,12,13,14,16,18,20,24,25,26,27,29,30,31,36,38,39,40,41,42,43,44,45,46,50,52,53,54,55,57,],[11,-28,-9,11,-27,-26,-8,11,11,11,11,11,-30,11,-11,-13,11,11,11,11,-21,11,-25,-29,-10,-12,-22,-23,-24,-20,-19,]),'$end':([1,2,4,5,8,9,19,28,],[-5,0,-4,-1,-2,-3,-7,-6,]),'NUMBER':([7,11,12,13,14,16,18,20,24,25,26,27,29,30,31,36,38,39,40,41,42,43,44,45,46,50,52,53,54,55,57,],[14,-28,-9,14,-27,-26,-8,14,14,14,14,14,-30,14,-11,-13,14,14,14,14,-21,14,-25,-29,-10,-12,-22,-23,-24,-20,-19,]),'ASSIGN':([15,],[23,]),'OP_ADD':([15,],[24,]),'OP_SUB':([15,],[25,]),'LPAREN':([0,1,4,5,7,8,9,11,12,13,14,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,50,52,53,54,55,57,58,],[6,-5,-4,6,15,-2,-3,-28,-9,15,-27,-26,-8,-7,15,35,35,15,15,15,15,-6,-30,15,-11,35,-15,-17,-13,35,15,15,15,15,-21,15,-25,-29,-10,-14,-12,-22,-23,-24,-20,-19,-16,]),'RBRACE':([11,12,13,14,16,18,31,36,42,44,46,50,52,53,54,55,57,],[-28,-9,19,-27,-26,-8,-11,-13,-21,-25,-10,-12,-22,-23,-24,-20,-19,]),'LBRACE':([0,1,4,5,8,9,19,28,],[3,-5,-4,3,-2,-3,-7,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([20,24,25,26,27,],[30,39,40,41,43,]),'type':([35,],[49,]),'component':([0,5,],[1,8,]),'expression_list':([7,],[13,]),'expression':([7,13,20,24,25,26,27,30,38,39,40,41,43,],[12,18,29,29,29,29,29,45,51,45,45,45,45,]),'program':([0,],[2,]),'declaration':([21,22,32,37,],[33,33,47,47,]),'declaration_list':([21,22,],[32,37,]),'statement_list':([0,],[5,]),'import_statement':([0,5,],[4,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',24),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',28),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',32),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',33),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',41),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',42),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',49),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',50),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',57),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',58),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',66),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',67),
  ('type -> ID','type',1,'p_type','parser.py',74),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',78),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',82),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',83),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_add_expression','parser.py',90),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_sub_expression','parser.py',94),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_mul_expression','parser.py',98),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_div_expression','parser.py',102),
  ('expression -> ID','expression',1,'p_id','parser.py',106),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',110),
  ('expression -> STRING','expression',1,'p_string','parser.py',114),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',118),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',119),
]
