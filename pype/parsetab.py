
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9A00E87FD640930D518D16A91B7B52A0'
    
_lr_action_items = {'NUMBER':([8,12,14,15,16,17,21,22,23,24,26,27,33,34,35,36,37,38,39,40,42,43,47,49,50,51,52,53,54,55,57,],[12,-27,-9,-26,12,-28,12,12,12,12,12,-8,-13,12,12,-30,12,12,-21,12,-11,12,-12,-29,-25,-23,-20,-24,-10,-22,-19,]),'LPAREN':([0,4,5,6,8,9,10,12,14,15,16,17,18,19,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,57,58,],[2,-4,-5,2,13,-3,-2,-27,-9,-26,13,-28,-6,29,13,13,13,13,29,13,-8,-7,-15,-17,29,-13,13,13,-30,13,13,-21,13,29,-11,13,-14,-12,-29,-25,-23,-20,-24,-10,-22,-19,-16,]),'INPUT':([13,],[25,]),'ASSIGN':([13,],[20,]),'$end':([1,4,5,6,9,10,18,28,],[0,-4,-5,-1,-3,-2,-6,-7,]),'RBRACE':([12,14,15,16,17,27,33,39,42,47,50,51,52,53,54,55,57,],[-27,-9,-26,28,-28,-8,-13,-21,-11,-12,-25,-23,-20,-24,-10,-22,-19,]),'OP_DIV':([13,],[21,]),'OUTPUT':([13,],[19,]),'LBRACE':([0,4,5,6,9,10,18,28,],[3,-4,-5,3,-3,-2,-6,-7,]),'ID':([3,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,57,58,],[8,11,15,-27,23,-9,-26,15,-28,31,34,15,15,15,15,31,15,-8,44,-15,-17,31,-13,15,15,-30,15,15,-21,15,31,-11,15,-18,56,-14,-12,-29,-25,-23,-20,-24,-10,-22,-19,-16,]),'OP_MUL':([13,],[24,]),'IMPORT':([2,],[7,]),'STRING':([8,12,14,15,16,17,21,22,23,24,26,27,33,34,35,36,37,38,39,40,42,43,47,49,50,51,52,53,54,55,57,],[17,-27,-9,-26,17,-28,17,17,17,17,17,-8,-13,17,17,-30,17,17,-21,17,-11,17,-12,-29,-25,-23,-20,-24,-10,-22,-19,]),'OP_SUB':([13,],[22,]),'OP_ADD':([13,],[26,]),'RPAREN':([11,12,15,17,19,23,25,30,31,32,33,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-27,-26,-28,33,39,42,-15,-17,47,-13,50,-30,51,52,-21,53,54,-11,55,-14,-12,57,-29,-25,-23,-20,-24,-10,-22,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'type':([29,],[45,]),'declaration_list':([19,25,],[32,41,]),'parameter_list':([21,22,23,24,26,],[35,37,38,40,43,]),'expression_list':([8,],[16,]),'declaration':([19,25,32,41,],[30,30,46,46,]),'import_statement':([0,6,],[4,9,]),'component':([0,6,],[5,10,]),'expression':([8,16,21,22,23,24,26,34,35,37,38,40,43,],[14,27,36,36,36,36,36,48,49,49,49,49,49,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',10),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',17),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',18),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',19),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',20),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',29),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',34),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',39),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',40),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',49),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',50),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',58),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',59),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',67),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',68),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',77),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',78),
  ('type -> ID','type',1,'p_type','parser.py',86),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',91),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',96),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',97),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',105),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',110),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',115),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',120),
  ('expression -> ID','expression',1,'p_id','parser.py',125),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',130),
  ('expression -> STRING','expression',1,'p_string','parser.py',135),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',140),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',141),
]
