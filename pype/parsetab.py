
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EFB8CF1353CF3C09DEAB2CE24795587E'
    
_lr_action_items = {'RBRACE':([12,13,14,16,17,20,34,38,42,45,46,50,51,52,53,54,57,],[-27,-28,19,-9,-26,-8,-11,-13,-21,-23,-25,-10,-24,-12,-22,-20,-19,]),'OP_SUB':([15,],[21,]),'OP_DIV':([15,],[22,]),'NUMBER':([10,12,13,14,16,17,20,21,22,24,26,27,29,30,31,34,37,38,40,41,42,43,44,45,46,50,51,52,53,54,57,],[12,-27,-28,12,-9,-26,-8,12,12,12,12,12,-30,12,12,-11,12,-13,12,12,-21,12,-29,-23,-25,-10,-24,-12,-22,-20,-19,]),'LBRACE':([0,2,4,5,8,9,18,19,],[6,-4,6,-5,-3,-2,-6,-7,]),'IMPORT':([1,],[7,]),'ASSIGN':([15,],[28,]),'INPUT':([15,],[23,]),'OP_MUL':([15,],[24,]),'OUTPUT':([15,],[25,]),'LPAREN':([0,2,4,5,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,57,58,],[1,-4,1,-5,-3,-2,15,-27,-28,15,-9,-26,-6,-7,-8,15,15,32,15,32,15,15,-30,15,15,-15,-11,-17,32,15,-13,32,15,15,-21,15,-29,-23,-25,-14,-10,-24,-12,-22,-20,-19,-16,]),'OP_ADD':([15,],[26,]),'STRING':([10,12,13,14,16,17,20,21,22,24,26,27,29,30,31,34,37,38,40,41,42,43,44,45,46,50,51,52,53,54,57,],[13,-27,-28,13,-9,-26,-8,13,13,13,13,13,-30,13,13,-11,13,-13,13,13,-21,13,-29,-23,-25,-10,-24,-12,-22,-20,-19,]),'RPAREN':([11,12,13,17,23,25,27,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,46,49,50,51,52,53,54,55,56,57,58,],[18,-27,-28,-26,34,38,42,-30,45,46,-15,-11,-17,50,51,-13,52,53,54,-21,-29,-23,-25,-14,-10,-24,-12,-22,-20,57,58,-19,-16,]),'ID':([6,7,10,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[10,11,17,-27,-28,17,27,-9,-26,-8,17,17,35,17,35,17,17,43,-30,17,17,47,-15,-11,-17,35,17,-13,35,17,17,-21,17,-29,-23,-25,-18,56,-14,-10,-24,-12,-22,-20,-19,-16,]),'$end':([2,3,4,5,8,9,18,19,],[-4,0,-1,-5,-3,-2,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([21,22,24,26,27,],[30,31,37,40,41,]),'import_statement':([0,4,],[2,8,]),'program':([0,],[3,]),'statement_list':([0,],[4,]),'declaration_list':([23,25,],[36,39,]),'component':([0,4,],[5,9,]),'expression':([10,14,21,22,24,26,27,30,31,37,40,41,43,],[16,20,29,29,29,29,29,44,44,44,44,44,55,]),'declaration':([23,25,36,39,],[33,33,49,49,]),'expression_list':([10,],[14,]),'type':([32,],[48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',25),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',35),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',36),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',45),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',46),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',54),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',55),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',63),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',64),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',92),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',93),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',101),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',106),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',111),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',116),
  ('expression -> ID','expression',1,'p_id','parser.py',121),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',126),
  ('expression -> STRING','expression',1,'p_string','parser.py',131),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',136),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',137),
]
