
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EFB8CF1353CF3C09DEAB2CE24795587E'
    
_lr_action_items = {'RPAREN':([13,14,15,17,20,22,24,29,30,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,],[-28,-26,-27,28,33,35,41,44,-30,47,-21,48,-13,-15,49,-17,53,-11,54,55,-22,-29,56,-20,-23,-12,-14,-24,-10,-25,-19,58,-16,]),'LBRACE':([0,3,4,6,9,10,27,28,],[1,-5,-4,1,-2,-3,-7,-6,]),'RBRACE':([12,13,14,15,16,26,33,35,41,44,47,48,49,53,54,55,56,],[-9,-28,-26,-27,27,-8,-21,-13,-11,-22,-20,-23,-12,-24,-10,-25,-19,]),'OP_ADD':([11,],[18,]),'LPAREN':([0,3,4,6,7,9,10,12,13,14,15,16,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,47,48,49,50,53,54,55,56,58,],[5,-5,-4,5,11,-2,-3,-9,-28,-26,-27,11,11,11,11,39,11,39,11,-8,-7,-6,11,-30,11,11,-21,11,-13,-15,39,-17,11,-11,39,11,-22,-29,-20,-23,-12,-14,-24,-10,-25,-19,-16,]),'ASSIGN':([11,],[19,]),'OP_DIV':([11,],[25,]),'STRING':([7,12,13,14,15,16,18,20,21,23,25,26,29,30,31,32,33,34,35,40,41,43,44,45,47,48,49,53,54,55,56,],[13,-9,-28,-26,-27,13,13,13,13,13,13,-8,13,-30,13,13,-21,13,-13,13,-11,13,-22,-29,-20,-23,-12,-24,-10,-25,-19,]),'ID':([1,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,],[7,14,17,20,-9,-28,-26,-27,14,14,31,14,14,38,14,38,14,-8,14,-30,14,14,-21,14,-13,-15,38,-17,52,14,-11,38,14,-22,-29,-20,-23,-12,-14,57,-18,-24,-10,-25,-19,-16,]),'INPUT':([11,],[24,]),'OP_SUB':([11,],[21,]),'IMPORT':([5,],[8,]),'OUTPUT':([11,],[22,]),'OP_MUL':([11,],[23,]),'NUMBER':([7,12,13,14,15,16,18,20,21,23,25,26,29,30,31,32,33,34,35,40,41,43,44,45,47,48,49,53,54,55,56,],[15,-9,-28,-26,-27,15,15,15,15,15,15,-8,15,-30,15,15,-21,15,-13,15,-11,15,-22,-29,-20,-23,-12,-24,-10,-25,-19,]),'$end':([2,3,4,6,9,10,27,28,],[0,-5,-4,-1,-2,-3,-7,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([18,20,21,23,25,],[29,32,34,40,43,]),'program':([0,],[2,]),'declaration':([22,24,37,42,],[36,36,50,50,]),'expression_list':([7,],[16,]),'component':([0,6,],[3,9,]),'import_statement':([0,6,],[4,10,]),'type':([39,],[51,]),'declaration_list':([22,24,],[37,42,]),'expression':([7,16,18,20,21,23,25,29,31,32,34,40,43,],[12,26,30,30,30,30,30,45,46,45,45,45,45,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',10),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',17),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',18),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',19),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',20),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',29),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',34),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',39),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',40),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',49),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',50),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',58),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',59),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',67),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',68),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',77),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',78),
  ('type -> ID','type',1,'p_type','parser.py',86),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',91),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',96),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',97),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',105),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',110),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',115),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',120),
  ('expression -> ID','expression',1,'p_id','parser.py',125),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',130),
  ('expression -> STRING','expression',1,'p_string','parser.py',135),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',140),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',141),
]
