
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9A00E87FD640930D518D16A91B7B52A0'
    
_lr_action_items = {'INPUT':([13,],[18,]),'LBRACE':([0,1,5,6,9,10,27,28,],[3,-4,-5,3,-3,-2,-7,-6,]),'OP_DIV':([13,],[20,]),'NUMBER':([7,11,12,14,15,16,19,20,21,22,24,26,31,34,35,36,37,38,39,40,41,43,46,48,49,50,51,52,54,55,57,],[11,-27,-28,-9,-26,11,11,11,11,11,11,-8,-11,-30,11,11,11,11,-21,11,11,-13,-10,-29,-24,-25,-22,-20,-23,-12,-19,]),'ASSIGN':([13,],[23,]),'OP_ADD':([13,],[21,]),'ID':([3,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,],[7,15,17,-27,-28,22,-9,-26,15,29,15,15,15,15,40,15,29,-8,-17,44,-11,-15,29,-30,15,15,15,15,-21,15,15,29,-13,-18,56,-10,-14,-29,-24,-25,-22,-20,-23,-12,-19,-16,]),'STRING':([7,11,12,14,15,16,19,20,21,22,24,26,31,34,35,36,37,38,39,40,41,43,46,48,49,50,51,52,54,55,57,],[12,-27,-28,-9,-26,12,12,12,12,12,12,-8,-11,-30,12,12,12,12,-21,12,12,-13,-10,-29,-24,-25,-22,-20,-23,-12,-19,]),'RBRACE':([11,12,14,15,16,26,31,39,43,46,49,50,51,52,54,55,57,],[-27,-28,-9,-26,27,-8,-11,-21,-13,-10,-24,-25,-22,-20,-23,-12,-19,]),'$end':([1,2,5,6,9,10,27,28,],[-4,0,-5,-1,-3,-2,-7,-6,]),'OP_SUB':([13,],[24,]),'OP_MUL':([13,],[19,]),'RPAREN':([11,12,15,17,18,22,25,29,31,32,33,34,35,36,37,38,39,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-27,-28,-26,28,31,39,43,-17,-11,-15,46,-30,49,50,51,52,-21,54,55,-13,-10,-14,-29,-24,-25,-22,-20,57,-23,-12,58,-19,-16,]),'LPAREN':([0,1,5,6,7,9,10,11,12,14,15,16,18,19,20,21,22,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,54,55,57,58,],[4,-4,-5,4,13,-3,-2,-27,-28,-9,-26,13,30,13,13,13,13,13,30,-8,-7,-6,-17,-11,-15,30,-30,13,13,13,13,-21,13,13,30,-13,-10,-14,-29,-24,-25,-22,-20,-23,-12,-19,-16,]),'IMPORT':([4,],[8,]),'OUTPUT':([13,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'import_statement':([0,6,],[1,9,]),'program':([0,],[2,]),'declaration_list':([18,25,],[33,42,]),'type':([30,],[45,]),'parameter_list':([19,20,21,22,24,],[35,36,37,38,41,]),'expression_list':([7,],[16,]),'declaration':([18,25,33,42,],[32,32,47,47,]),'expression':([7,16,19,20,21,22,24,35,36,37,38,40,41,],[14,26,34,34,34,34,34,48,48,48,48,53,48,]),'component':([0,6,],[5,10,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',25),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',35),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',36),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input_expression','parser.py',45),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input_expression','parser.py',46),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output_expression','parser.py',54),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output_expression','parser.py',55),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',63),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',64),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign_expression','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_parameter_list_expression','parser.py',92),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_parameter_list_expression','parser.py',93),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',101),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',106),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',111),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',116),
  ('expression -> ID','expression',1,'p_id','parser.py',121),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',126),
  ('expression -> STRING','expression',1,'p_string','parser.py',131),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',136),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',137),
]
